--- bazel/build_defs.bzl
+++ bazel/build_defs.bzl
@@ -37,6 +37,7 @@
     "-Werror",
     "-Wno-unused-parameter",
     "-Wno-long-long",
+    "-std=c++14",
 ])
 _DEFAULT_COPTS.extend([
     "-std=c99",

--- bazel/upb_proto_library.bzl
+++ bazel/upb_proto_library.bzl
@@ -74,13 +74,13 @@
     real_short_path = _get_real_short_path(file)
     root = file.path[:-len(real_short_path) - 1]
 
-    if not _is_google3 and ctx.rule.attr.strip_import_prefix:
+    if False:
         root = paths.join(root, ctx.rule.attr.strip_import_prefix[1:])
     return root
 
 def _generate_output_file(ctx, src, extension):
     package = ctx.label.package
-    if not _is_google3:
+    if False:
         strip_import_prefix = ctx.rule.attr.strip_import_prefix
         if strip_import_prefix and strip_import_prefix != "/":
             if not package.startswith(strip_import_prefix[1:]):

--- upbc/BUILD
+++ upbc/BUILD
@@ -98,7 +98,7 @@
         "//:upb",
         "@com_google_absl//absl/container:flat_hash_map",
         "@com_google_absl//absl/strings",
-        "@com_google_protobuf//src/google/protobuf/compiler:code_generator",
+        "@com_google_protobuf//:protoc_lib",
     ],
 )
 
@@ -129,7 +129,7 @@
         "@com_google_absl//absl/container:flat_hash_map",
         "@com_google_absl//absl/strings",
         "@com_google_protobuf//:protobuf",
-        "@com_google_protobuf//src/google/protobuf/compiler:code_generator",
+        "@com_google_protobuf//:protoc_lib",
     ],
 )
 
@@ -149,7 +149,7 @@
         "@com_google_absl//absl/container:flat_hash_set",
         "@com_google_absl//absl/strings",
         "@com_google_protobuf//:protobuf",
-        "@com_google_protobuf//src/google/protobuf/compiler:code_generator",
+        "@com_google_protobuf//:protoc_lib",
     ],
 )
 
@@ -166,7 +166,7 @@
         "@com_google_absl//absl/container:flat_hash_map",
         "@com_google_absl//absl/strings",
         "@com_google_protobuf//:protobuf",
-        "@com_google_protobuf//src/google/protobuf/compiler:code_generator",
+        "@com_google_protobuf//:protoc_lib",
     ],
 )
 

