#!/bin/bash

# Copyright 2024, 2025 Philipp Stephani
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -euC

workflow=update-lockfiles.yaml
stamp=lock.stamp
run=lock.run

if [[ -f "${stamp:?}" ]]; then
  read -r branch time < "${stamp:?}"
else
  branch="$(git branch --show-current)"
  time="$(date -u -Iseconds)"
  gh workflow run "${workflow:?}" --ref="${branch:?}"
  echo "${branch:?} ${time:?}" > "${stamp:?}"
fi

fetch_run_id() {
  gh run list \
    --workflow="${workflow:?}" \
    --event=workflow_dispatch \
    --branch="${branch:?}" \
    --created=">=${time:?}" \
    --limit=1 \
    --json=databaseId \
    --jq='.[].databaseId'
}

if [[ -f "${run:?}" ]]; then
  read -r id < "${run:?}"
else
  while id="$(fetch_run_id)" && [[ -z "${id}" ]]; do
    sleep 1
  done
  echo "${id:?}" > "${run:?}"
fi

gh run watch "${id:?}" --exit-status
gh run download "${id:?}"

for dir in . examples/ext; do
  out="${dir:?}/MODULE.bazel.lock"
  linux="lockfiles-Linux-X64/${out:?}"
  macos="lockfiles-macOS-ARM64/${out:?}"
  windows="lockfiles-Windows-X64/${out:?}"
  bazel run \
    --lockfile_mode=off \
    --output_groups='-pylint,-pytype' \
    -- \
    @phst_merge_bazel_lockfiles//:merge \
    --linux-amd64="${linux:?}" \
    --darwin-arm64="${macos:?}" \
    --windows-amd64="${windows:?}" \
    --local="${out:?}" \
    --output="${out:?}"
  rm -- "${linux:?}" "${macos:?}" "${windows:?}"
done

# This will fail if we forgot some OS above.
rmdir -- \
  lockfiles-*/examples/ext \
  lockfiles-*/examples \
  lockfiles-*

rm -- "${stamp:?}" "${run:?}"
